% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computePD.R
\name{computePD}
\alias{computePD}
\title{Compute Partial Dependence}
\usage{
computePD(model, data, feature, n = "default", l = "default", wp = 0,
  predict.fun = function(object, newdata) predict(object, newdata =
  newdata), multiclass = FALSE, derivative = FALSE)
}
\arguments{
\item{model}{[\code{\link[mlr]{WrappedModel}} | \code{any}]\cr
A model object. Can be also an object of class \code{\link[mlr]{WrappedModel}}.}

\item{data}{[\code{logical(1)}]\cr
The data set that was used to fit the model.}

\item{feature}{[\code{character(1)}]\cr
Feature name, subset of \code{colnames(data)}.}

\item{predict.fun}{[\code{function(1)}]\cr
The function that should be used to generate predictions from \code{model}.
The specified prediction function is subject to subsequent numeric
differentiation and thus needs to be carefully chosen in order to receive the correct
results. This function must have two arguments, \code{object} and \code{newdata}.
The default is the predict method for \code{model}.
If \code{model} is of class \code{\link[mlr]{WrappedModel}}, the default tries to use
\code{\link[mlr]{getPredictionProbabilities}} or \code{\link[mlr]{getPredictionResponse}}
depending on whether \code{model} is a classification or regression problem.}

\item{n=nrow(data)/5}{[\code{integer}]\cr Grid size}

\item{l=nrow(data)}{[\code{integer}]\cr Number of points that are defined as local to a grid point}

\item{wp=0}{[\code{numeric}]\cr
Defines the weights that are based on the distance from the grid point.
Higher wp means more weight on nearby observations.
wp=0: all weights equal 1 (standard partial dependence).}

\item{multiclass=FALSE}{[\code{logical}]}

\item{derivative=FALSE}{[\code{logical}]}
}
\description{
Compute Partial Dependence with weighing or selecting observations based on distance.
}
\section{TODO}{

\itemize{
  \item implement mlr models
  \item factor features?
}
}

