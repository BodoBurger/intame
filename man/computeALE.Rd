% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeALE.R
\name{computeALE}
\alias{computeALE}
\title{Compute Local Accumulated Effects (ALE)}
\usage{
computeALE(model, data, feature, K = "default", predict.fun = predict,
  multiclass = FALSE, minbucket = 1)
}
\arguments{
\item{model}{[\code{\link[mlr]{WrappedModel}} | \code{any}]\cr
A model object. Can be also an object of class \code{\link[mlr]{WrappedModel}}.}

\item{data}{[\code{logical(1)}]\cr
The data set that was used to fit the model.}

\item{feature}{[\code{character(1)}]\cr
Feature name, subset of \code{colnames(data)}.}

\item{K}{number of intervals}

\item{predict.fun}{[\code{function(1)}]\cr
The function that should be used to generate predictions from \code{model}.
The specified prediction function is subject to subsequent numeric
differentiation and thus needs to be carefully chosen in order to receive the correct
results. This function must have two arguments, \code{object} and \code{newdata}.
The default is the predict method for \code{model}.
If \code{model} is of class \code{\link[mlr]{WrappedModel}}, the default tries to use
\code{\link[mlr]{getPredictionProbabilities}} or \code{\link[mlr]{getPredictionResponse}}
depending on whether \code{model} is a classification or regression problem.}

\item{minbucket}{Not yet implemented.}
}
\description{
Implementation of \href{https://arxiv.org/abs/1612.08468}{Apley (2016) Visualizing the Effects of Predictor Variables in Black Box Supervised Learning Models}
}
\section{TODO}{

\itemize{
  \item implement mlr models
  \item factor features
  \item add uniform grid option is useful (what happens to empty intervals?)
  \item minbucket
  \item pass specific interval boundaries (z)
  \item second-order effects
}
}

